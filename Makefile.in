# $Id$

MAKEFLAGS = -s -j4

SHELL = @SHELL@
top_srcdir = @top_srcdir@
srcdir = @srcdir@
VPATH = @srcdir@

@SET_MAKE@
DISTRIB = @PACKAGE_TARNAME@-@PACKAGE_VERSION@
CCDEPMODE = @CCDEPMODE@
BINEXEC = @PACKAGE_TARNAME@@EXEEXT@
REVISION := $(shell build/getrev.sh)
BUILDTS  := $(shell build/getts.sh)


# defaults
CXX = @CCACHE@ @DISTCC@ @CXX@ -static
LD = @CXX@ -static
CXXDEBUG = @CCACHE@ @DISTCC@ @CXXDEBUG@
LDDEBUG = @CXXDEBUG@
LIBS = @LIBS@ @ZLIB@

# utils
STRIP = @STRIP@
DIFF = @DIFF@
SED = @SED@
GREP = @GREP@
AWK = @AWK@
YACC = @YACC@
VALGRIND = @VALGRIND@

DEBCXXFLAGS = -DDEBUG -fno-inline -g3 -ggdb3 -O0 @DEBGCC3@
CFLGS = @GCC3@

MAKE_BIN = $(MAKE) 'MAKE=$(MAKE)' 'CXX=$(CXX)' 'LD=$(LD)' 'CCDEPMODE=$(CCDEPMODE)' 'REVISION=$(REVISION)' 'BUILDTS=$(BUILDTS)' \
'STRIP=$(STRIP)' 'CFLGS=$(CFLGS)' 'LIBS=$(LIBS)' 'BINEXEC=$(BINEXEC)' 'BINBUILD=(distrib)'

MAKE_DEBUG = $(MAKE) 'MAKE=$(MAKE)' 'CXX=$(CXXDEBUG)' 'LD=$(LDDEBUG) -g' 'CCDEPMODE=$(CCDEPMODE)' 'REVISION=$(REVISION)' 'BUILDTS=$(BUILDTS)' \
'STRIP=touch' 'CFLGS=$(DEBCXXFLAGS) $(CFLGS) @DEBNOUNITSGCC3@' 'LIBS=$(LIBS)' 'BINEXEC=$(BINEXEC)' 'BINBUILD=(debug)'

MAKE_UNITS = $(MAKE) 'MAKE=$(MAKE)' 'CXX=$(CXXDEBUG)' 'LD=$(LDDEBUG) -g' 'CCDEPMODE=$(CCDEPMODE)' \
'STRIP=touch' 'CFLGS=$(DEBCXXFLAGS) $(CFLGS)' 'LIBS=$(LIBS)'

MAKE_UTILS = $(MAKE) 'MAKE=$(MAKE)' 'CXX=$(CXXDEBUG)' 'STRIP=touch' 'CCDEPMODE=$(CCDEPMODE)' \
'CFLGS=$(DEBCXXFLAGS) $(CFLGS)' 'LIBS=$(LIBS)' 'LD=$(LDDEBUG) -g'

.PHONY: default clean distclean wraith debug general check checkclean.wraith checkclean.debug buildcheck

default: wraith

clean:
	-+@cd src && $(MAKE) clean
	-+@cd build && $(MAKE) clean
	@rm -f $(BINEXEC) build/stamp.* *~ src/*~ configure.temp utctime@EXEEXT@ ts@EXEEXT@

distclean: clean
	-+@cd build && $(MAKE) distclean
	-+@cd src && $(MAKE) distclean
	@rm -f Makefile config.log config.status
	@rm -rf *-$(VERSION)/ autom4te.cache/ autoscan.log configure.scan

checkclean.wraith:
	@(if test -f build/stamp.debug; then \
	echo "[*] Cleaning up alternate build"; \
	$(MAKE) MAKEFLAGS=-s clean; \
	fi)
	@touch build/stamp.wraith

checkclean.debug:
	@(if test -f build/stamp.wraith; then \
	echo "[*] Cleaning up alternate build"; \
	$(MAKE) MAKEFLAGS=-s clean; \
	fi)
	@touch build/stamp.debug

wraith: checkclean.wraith general
	@echo "[*] Making binary"
	+@cd src && $(MAKE_BIN) $(BINEXEC)


debug: checkclean.debug general
	@echo "[*] Making binary (debug)"
	+@cd src && $(MAKE_DEBUG) $(BINEXEC)

general:

buildcheck: checkclean.debug
	+@cd src && $(MAKE) bdlib
	+@cd src/tests && $(MAKE_UNITS) units
	+@cd build && ${MAKE_DEBUG} check
	@echo "[*] Running unit tests..."


check: checkclean.debug general buildcheck
	@$(VALGRIND) build/UnitRunner@EXEEXT@

checkquick: checkclean.debug general buildcheck
	build/UnitRunner@EXEEXT@
