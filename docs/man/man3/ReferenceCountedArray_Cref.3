.TH "ReferenceCountedArray::Cref" 3 "18 Dec 2009" "Version 1.0" "BDLIB" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ReferenceCountedArray::Cref \- Safe element reading and writing.  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include <ReferenceCountedArray.h>\fP
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCref\fP (const \fBCref\fP &cref)"
.br
.ti -1c
.RI "\fBCref\fP & \fBoperator=\fP (const \fBCref\fP &cref)"
.br
.ti -1c
.RI "\fBoperator value_type\fP () const "
.br
.ti -1c
.RI "\fBCref\fP & \fBoperator=\fP (value_type c)"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fBReferenceCountedArray\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class T> class ReferenceCountedArray< T >::Cref"
Safe element reading and writing. 

\fBTodo\fP
.RS 4
This should not provide copy constructors for \fBCref\fP, they shouldn't be needed because of const char String::operator[] This class should be optimized away and fully inlined such that: \fBString\fP s; s[0] = 'a'; Should be rewritten as: s.write(0, 'a'); 
.RE
.PP

.PP
Definition at line 467 of file ReferenceCountedArray.h.
.SH "Member Function Documentation"
.PP 
.SS "template<class T> ReferenceCountedArray< T >::ReferenceCountedArray::Cref::operator value_type () const\fC [inline]\fP"
.PP
\fBSee also:\fP
.RS 4
ReferenceCountedArray::operator[] 
.RE
.PP

.PP
Definition at line 490 of file ReferenceCountedArray.h.
.SS "template<class T> \fBCref\fP& ReferenceCountedArray< T >::ReferenceCountedArray::Cref::operator= (value_type c)\fC [inline]\fP"
.PP
Stroustrup shows using this as void with no return value, but that breaks chaining a[n] = b[n] = 'b'; 
.PP
Definition at line 495 of file ReferenceCountedArray.h.

.SH "Author"
.PP 
Generated automatically by Doxygen for BDLIB from the source code.
