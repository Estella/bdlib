.TH "Iterator" 3 "18 Dec 2009" "Version 1.0" "BDLIB" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Iterator \- 
.SH SYNOPSIS
.br
.PP
\fC#include <Iterator.h>\fP
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual bool \fBhasNext\fP ()"
.br
.ti -1c
.RI "virtual \fBoperator bool\fP ()=0"
.br
.ti -1c
.RI "virtual T & \fBoperator*\fP ()=0"
.br
.ti -1c
.RI "virtual T * \fBoperator->\fP ()"
.br
.ti -1c
.RI "virtual \fB~Iterator\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename T> class Iterator< T >"

.PP
Definition at line 31 of file Iterator.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename T> virtual \fBIterator\fP< T >::~\fBIterator\fP ()\fC [inline, virtual]\fP"
.PP
Definition at line 49 of file Iterator.h.
.SH "Member Function Documentation"
.PP 
.SS "template<typename T> virtual bool \fBIterator\fP< T >::hasNext ()\fC [inline, virtual]\fP"
.PP
Definition at line 48 of file Iterator.h.
.SS "template<typename T> virtual \fBIterator\fP< T >::operator bool ()\fC [pure virtual]\fP"
.PP
.SS "template<typename T> virtual T& \fBIterator\fP< T >::operator* ()\fC [pure virtual]\fP"
.PP
.SS "template<typename T> virtual T* \fBIterator\fP< T >::operator-> ()\fC [inline, virtual]\fP"
.PP
Definition at line 53 of file Iterator.h.

.SH "Author"
.PP 
Generated automatically by Doxygen for BDLIB from the source code.
