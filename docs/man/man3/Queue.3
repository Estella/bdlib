.TH "Queue" 3 "18 Dec 2009" "Version 1.0" "BDLIB" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Queue \- A FIFO \fBQueue\fP, what else!  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include <Queue.h>\fP
.PP
Inherits \fBList< T >\fP.
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef \fBQueueConstIterator\fP< T > \fBconst_iterator\fP"
.br
.ti -1c
.RI "typedef const \fBvalue_type\fP * \fBconst_pointer\fP"
.br
.ti -1c
.RI "typedef const \fBvalue_type\fP & \fBconst_reference\fP"
.br
.ti -1c
.RI "typedef ptrdiff_t \fBdifference_type\fP"
.br
.ti -1c
.RI "typedef \fBQueueIterator\fP< T > \fBiterator\fP"
.br
.ti -1c
.RI "typedef T \fBiterator_type\fP"
.br
.ti -1c
.RI "typedef \fBvalue_type\fP * \fBpointer\fP"
.br
.ti -1c
.RI "typedef \fBvalue_type\fP & \fBreference\fP"
.br
.ti -1c
.RI "typedef size_t \fBsize_type\fP"
.br
.ti -1c
.RI "typedef T \fBvalue_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBconst_iterator\fP \fBbegin\fP () const "
.br
.ti -1c
.RI "\fBiterator\fP \fBbegin\fP ()"
.br
.ti -1c
.RI "void \fBclear\fP ()"
.br
.ti -1c
.RI "bool \fBcontains\fP (const \fBiterator_type\fP &ptr) const"
.br
.ti -1c
.RI "\fBvalue_type\fP \fBdequeue\fP ()"
.br
.RI "\fIDequeue an element from the tail. \fP"
.ti -1c
.RI "\fBconst_iterator\fP \fBend\fP () const "
.br
.ti -1c
.RI "\fBiterator\fP \fBend\fP ()"
.br
.ti -1c
.RI "void \fBenqueue\fP (\fBconst_reference\fP item)"
.br
.ti -1c
.RI "const \fBiterator_type\fP \fBfind\fP (const \fBiterator_type\fP &ptr) const"
.br
.ti -1c
.RI "\fBiterator_type\fP & \fBfindRef\fP (const \fBiterator_type\fP &ptr)"
.br
.RI "\fIReturn a reference to the found element. \fP"
.ti -1c
.RI "\fBconst_iterator\fP \fBfront\fP ()"
.br
.RI "\fIReturn the first element, but don't dequeue it. \fP"
.ti -1c
.RI "void \fBinsert\fP (const \fBiterator_type\fP &ptr)"
.br
.RI "\fIInsert into the list at the head. \fP"
.ti -1c
.RI "bool \fBisEmpty\fP () const"
.br
.ti -1c
.RI "\fBQueue\fP ()"
.br
.ti -1c
.RI "bool \fBremove\fP (const \fBiterator_type\fP &ptr)"
.br
.ti -1c
.RI "size_t \fBsize\fP () const"
.br
.ti -1c
.RI "virtual \fB~Queue\fP ()"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBdeleteNode\fP (Node *node)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "Node * \fBhead\fP"
.br
.ti -1c
.RI "size_t \fBmy_size\fP"
.br
.ti -1c
.RI "Node * \fBtail\fP"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "\fBList\fP< \fBiterator_type\fP > & \fBoperator<<\fP (\fBList\fP< \fBiterator_type\fP > &list, const \fBiterator_type\fP &item)"
.br
.ti -1c
.RI "\fBQueue\fP< \fBvalue_type\fP > & \fBoperator<<\fP (\fBQueue\fP< \fBvalue_type\fP > &queue, \fBconst_reference\fP item)"
.br
.ti -1c
.RI "\fBQueue\fP< \fBvalue_type\fP > & \fBoperator>>\fP (\fBQueue\fP< \fBvalue_type\fP > &queue, \fBreference\fP item)"
.br
.ti -1c
.RI "class \fBQueueConstIterator< T >\fP"
.br
.ti -1c
.RI "class \fBQueueIterator< T >\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class T> class Queue< T >"
A FIFO \fBQueue\fP, what else! 
.PP
Definition at line 40 of file Queue.h.
.SH "Member Typedef Documentation"
.PP 
.SS "template<class T > typedef \fBQueueConstIterator\fP<T> \fBQueue\fP< T >::\fBconst_iterator\fP"
.PP
Definition at line 48 of file Queue.h.
.SS "template<class T > typedef const \fBvalue_type\fP* \fBQueue\fP< T >::\fBconst_pointer\fP"
.PP
Definition at line 54 of file Queue.h.
.SS "template<class T > typedef const \fBvalue_type\fP& \fBQueue\fP< T >::\fBconst_reference\fP"
.PP
Definition at line 56 of file Queue.h.
.SS "template<class T > typedef ptrdiff_t \fBQueue\fP< T >::\fBdifference_type\fP"
.PP
Definition at line 52 of file Queue.h.
.SS "template<class T > typedef \fBQueueIterator\fP<T> \fBQueue\fP< T >::\fBiterator\fP"
.PP
Reimplemented from \fBList< T >\fP.
.PP
Definition at line 47 of file Queue.h.
.SS "typedef T  \fBList\fP< T  >::\fBiterator_type\fP\fC [inherited]\fP"
.PP
Definition at line 40 of file List.h.
.SS "template<class T > typedef \fBvalue_type\fP* \fBQueue\fP< T >::\fBpointer\fP"
.PP
Definition at line 53 of file Queue.h.
.SS "template<class T > typedef \fBvalue_type\fP& \fBQueue\fP< T >::\fBreference\fP"
.PP
Definition at line 55 of file Queue.h.
.SS "template<class T > typedef size_t \fBQueue\fP< T >::\fBsize_type\fP"
.PP
Definition at line 51 of file Queue.h.
.SS "template<class T > typedef T \fBQueue\fP< T >::\fBvalue_type\fP"
.PP
Definition at line 49 of file Queue.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class T > \fBQueue\fP< T >::\fBQueue\fP ()\fC [inline]\fP"
.PP
Definition at line 59 of file Queue.h.
.SS "template<class T > virtual \fBQueue\fP< T >::~\fBQueue\fP ()\fC [inline, virtual]\fP"
.PP
Definition at line 60 of file Queue.h.
.SH "Member Function Documentation"
.PP 
.SS "template<class T > \fBconst_iterator\fP \fBQueue\fP< T >::begin () const\fC [inline]\fP"
.PP
Definition at line 106 of file Queue.h.
.SS "template<class T > \fBiterator\fP \fBQueue\fP< T >::begin ()\fC [inline]\fP"
.PP
Reimplemented from \fBList< T >\fP.
.PP
Definition at line 104 of file Queue.h.
.SS "void \fBList\fP< T  >::clear ()\fC [inline, inherited]\fP"
.PP
Definition at line 89 of file List.h.
.SS "bool \fBList\fP< T  >::contains (const \fBiterator_type\fP & ptr) const\fC [inline, inherited]\fP"
.PP
Definition at line 128 of file List.h.
.SS "void \fBList\fP< T  >::deleteNode (Node * node)\fC [inline, protected, inherited]\fP"
.PP
Definition at line 52 of file List.h.
.SS "template<class T > \fBvalue_type\fP \fBQueue\fP< T >::dequeue ()\fC [inline]\fP"
.PP
Dequeue an element from the tail. 
.PP
Definition at line 65 of file Queue.h.
.SS "template<class T > \fBconst_iterator\fP \fBQueue\fP< T >::end () const\fC [inline]\fP"
.PP
Definition at line 107 of file Queue.h.
.SS "template<class T > \fBiterator\fP \fBQueue\fP< T >::end ()\fC [inline]\fP"
.PP
Reimplemented from \fBList< T >\fP.
.PP
Definition at line 105 of file Queue.h.
.SS "template<class T > void \fBQueue\fP< T >::enqueue (\fBconst_reference\fP item)\fC [inline]\fP"
.PP
Definition at line 92 of file Queue.h.
.SS "const \fBiterator_type\fP \fBList\fP< T  >::find (const \fBiterator_type\fP & ptr) const\fC [inline, inherited]\fP"
.PP
Definition at line 138 of file List.h.
.SS "\fBiterator_type\fP& \fBList\fP< T  >::findRef (const \fBiterator_type\fP & ptr)\fC [inline, inherited]\fP"
.PP
Return a reference to the found element. 
.PP
Definition at line 152 of file List.h.
.SS "template<class T > \fBconst_iterator\fP \fBQueue\fP< T >::front ()\fC [inline]\fP"
.PP
Return the first element, but don't dequeue it. 
.PP
Definition at line 82 of file Queue.h.
.SS "void \fBList\fP< T  >::insert (const \fBiterator_type\fP & ptr)\fC [inline, inherited]\fP"
.PP
Insert into the list at the head. 
.PP
\fBParameters:\fP
.RS 4
\fIptr\fP The ptr to insert 
.RE
.PP

.PP
Reimplemented in \fBSortedList< T >\fP.
.PP
Definition at line 108 of file List.h.
.SS "bool \fBList\fP< T  >::isEmpty () const\fC [inline, inherited]\fP"
.PP
Definition at line 101 of file List.h.
.SS "bool \fBList\fP< T  >::remove (const \fBiterator_type\fP & ptr)\fC [inline, inherited]\fP"
.PP
Definition at line 161 of file List.h.
.SS "size_t \fBList\fP< T  >::size () const\fC [inline, inherited]\fP"
.PP
Definition at line 100 of file List.h.
.SH "Friends And Related Function Documentation"
.PP 
.SS "\fBList\fP<\fBiterator_type\fP>& operator<< (\fBList\fP< \fBiterator_type\fP > & list, const \fBiterator_type\fP & item)\fC [friend, inherited]\fP"
.PP
\fBSee also:\fP
.RS 4
\fBinsert\fP 
.RE
.PP

.PP
Definition at line 123 of file List.h.
.SS "template<class T > \fBQueue\fP<\fBvalue_type\fP>& operator<< (\fBQueue\fP< \fBvalue_type\fP > & queue, \fBconst_reference\fP item)\fC [friend]\fP"
.PP
\fBSee also:\fP
.RS 4
push 
.RE
.PP

.PP
Definition at line 99 of file Queue.h.
.SS "template<class T > \fBQueue\fP<\fBvalue_type\fP>& operator>> (\fBQueue\fP< \fBvalue_type\fP > & queue, \fBreference\fP item)\fC [friend]\fP"
.PP
\fBSee also:\fP
.RS 4
\fBdequeue\fP 
.RE
.PP

.PP
Definition at line 74 of file Queue.h.
.SS "template<class T > friend class \fBQueueConstIterator\fP< T >\fC [friend]\fP"
.PP
Definition at line 45 of file Queue.h.
.SS "template<class T > friend class \fBQueueIterator\fP< T >\fC [friend]\fP"
.PP
Definition at line 44 of file Queue.h.
.SH "Member Data Documentation"
.PP 
.SS "Node* \fBList\fP< T  >::\fBhead\fP\fC [protected, inherited]\fP"
.PP
Definition at line 67 of file List.h.
.SS "size_t \fBList\fP< T  >::\fBmy_size\fP\fC [protected, inherited]\fP"
.PP
Definition at line 69 of file List.h.
.SS "Node* \fBList\fP< T  >::\fBtail\fP\fC [protected, inherited]\fP"
.PP
Definition at line 68 of file List.h.

.SH "Author"
.PP 
Generated automatically by Doxygen for BDLIB from the source code.
