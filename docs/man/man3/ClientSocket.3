.TH "ClientSocket" 3 "18 Dec 2009" "Version 1.0" "BDLIB" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ClientSocket \- 
.SH SYNOPSIS
.br
.PP
\fC#include <Socket.h>\fP
.PP
Inherits \fBSocket\fP.
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "bool \fBaccept\fP (\fBSocket\fP &) const "
.br
.ti -1c
.RI "bool \fBbind\fP (const in_port_t port)"
.br
.ti -1c
.RI "\fBClientSocket\fP (const \fBClientSocket\fP &cs)"
.br
.ti -1c
.RI "\fBClientSocket\fP (const \fBString\fP &dest, const in_port_t port, const \fBString\fP &src, const in_port_t sport)"
.br
.ti -1c
.RI "\fBClientSocket\fP (const \fBString\fP &dest, const in_port_t port)"
.br
.ti -1c
.RI "bool \fBconnect\fP (const \fBString\fP host, const in_port_t port)"
.br
.ti -1c
.RI "bool \fBcreate\fP ()"
.br
.ti -1c
.RI "bool \fBisValid\fP () const "
.br
.ti -1c
.RI "bool \fBlisten\fP () const "
.br
.ti -1c
.RI "bool \fBrecv\fP (\fBString\fP &) const "
.br
.ti -1c
.RI "bool \fBsend\fP (const \fBString\fP) const "
.br
.ti -1c
.RI "int \fBsetNonBlocking\fP (bool=1)"
.br
.ti -1c
.RI "virtual \fB~ClientSocket\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 88 of file Socket.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "ClientSocket::ClientSocket (const \fBString\fP & dest, const in_port_t port)"
.PP
.SS "ClientSocket::ClientSocket (const \fBString\fP & dest, const in_port_t port, const \fBString\fP & src, const in_port_t sport)"
.PP
.SS "ClientSocket::ClientSocket (const \fBClientSocket\fP & cs)"
.PP
.SS "virtual ClientSocket::~ClientSocket ()\fC [virtual]\fP"
.PP
.SH "Member Function Documentation"
.PP 
.SS "bool Socket::accept (\fBSocket\fP &) const\fC [inherited]\fP"
.PP
.SS "bool Socket::bind (const in_port_t port)\fC [inherited]\fP"
.PP
.SS "bool Socket::connect (const \fBString\fP host, const in_port_t port)\fC [inherited]\fP"
.PP
.SS "bool Socket::create ()\fC [inherited]\fP"
.PP
Definition at line 35 of file Socket.cpp.
.SS "bool Socket::isValid () const\fC [inline, inherited]\fP"
.PP
Definition at line 85 of file Socket.h.
.SS "bool Socket::listen () const\fC [inherited]\fP"
.PP
.SS "bool Socket::recv (\fBString\fP &) const\fC [inherited]\fP"
.PP
.SS "bool Socket::send (const  String) const\fC [inherited]\fP"
.PP
.SS "int Socket::setNonBlocking (bool = \fC1\fP)\fC [inherited]\fP"
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for BDLIB from the source code.
