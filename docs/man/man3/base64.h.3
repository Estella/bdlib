.TH "base64.h" 3 "18 Dec 2009" "Version 1.0" "BDLIB" \" -*- nroff -*-
.ad l
.nh
.SH NAME
base64.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'bdlib.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBBase64\fP"
.br
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fB_BD_BASE64_H\fP   1"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "char * \fBb64dec\fP (const unsigned char *data, size_t *len)"
.br
.RI "\fIDecode a base64 encoded string into plaintext (returns a buffer). \fP"
.ti -1c
.RI "void \fBb64dec_buf\fP (const unsigned char *data, size_t *len, char *dest)"
.br
.RI "\fIDecode a base64 encoded string into plaintext (using a given buffer). \fP"
.ti -1c
.RI "char * \fBb64enc\fP (const unsigned char *src, size_t *len)"
.br
.RI "\fIEncode a plaintext string into base64 (returns a buffer). \fP"
.ti -1c
.RI "void \fBb64enc_buf\fP (const unsigned char *data, size_t *len, char *dest)"
.br
.RI "\fIEncode a plaintext string into base64 (using a given buffer). \fP"
.ti -1c
.RI "\fBString\fP \fBbase64Decode\fP (const \fBString\fP &)"
.br
.RI "\fI\fBBase64\fP decode a string. \fP"
.ti -1c
.RI "\fBString\fP \fBbase64Encode\fP (const \fBString\fP &)"
.br
.RI "\fI\fBBase64\fP encode a string. \fP"
.in -1c
.SH "Define Documentation"
.PP 
.SS "#define _BD_BASE64_H   1"
.PP
Definition at line 24 of file base64.h.
.SH "Function Documentation"
.PP 
.SS "char* b64dec (const unsigned char * data, size_t * len)"
.PP
Decode a base64 encoded string into plaintext (returns a buffer). 
.PP
\fBParameters:\fP
.RS 4
\fIsrc\fP A c-style string to decode 
.br
\fIlen\fP Reference to length of string (to be updated on return) 
.RE
.PP
\fBReturns:\fP
.RS 4
A decoded NULL-terminated c-style string (must be free()d later) 
.RE
.PP

.PP
Definition at line 158 of file base64.c.
.SS "void b64dec_buf (const unsigned char * data, size_t * len, char * dest)"
.PP
Decode a base64 encoded string into plaintext (using a given buffer). 
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP The c-style string to decode 
.br
\fIlen\fP Reference to length of string (to be updated on return) 
.br
\fIdest\fP Reference to the buffer to decode into 
.RE
.PP

.PP
Definition at line 134 of file base64.c.
.SS "char* b64enc (const unsigned char * src, size_t * len)"
.PP
Encode a plaintext string into base64 (returns a buffer). 
.PP
\fBParameters:\fP
.RS 4
\fIsrc\fP A c-style string to encode 
.br
\fIlen\fP Reference to length of string (to be updated on return) 
.RE
.PP
\fBReturns:\fP
.RS 4
An encoded NULL-terminated c-style string (must be free()d later) 
.RE
.PP

.PP
Definition at line 123 of file base64.c.
.SS "void b64enc_buf (const unsigned char * data, size_t * len, char * dest)"
.PP
Encode a plaintext string into base64 (using a given buffer). 
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP The c-style string to encode 
.br
\fIlen\fP Reference to length of string (to be updated on return) 
.br
\fIdest\fP Reference to the buffer to encode into 
.RE
.PP

.PP
Definition at line 55 of file base64.c.
.SS "\fBString\fP base64Decode (const \fBString\fP &)"
.PP
\fBBase64\fP decode a string. 
.PP
\fBParameters:\fP
.RS 4
\fIstring\fP The string to decode 
.RE
.PP
\fBReturns:\fP
.RS 4
A new, decoded string 
.RE
.PP

.PP
Definition at line 168 of file base64.c.
.SS "\fBString\fP base64Encode (const \fBString\fP &)"
.PP
\fBBase64\fP encode a string. 
.PP
\fBParameters:\fP
.RS 4
\fIstring\fP The string to encode 
.RE
.PP
\fBReturns:\fP
.RS 4
A new, encoded string 
.RE
.PP

.PP
Definition at line 115 of file base64.c.
.SH "Author"
.PP 
Generated automatically by Doxygen for BDLIB from the source code.
